Alte Datenbank löschen:
sudo service neo4j stop
rm -rf /var/lib/neo4j/data/*
sudo service neo4j start

Import der neuen CSV-Dateien nach /var/lib/neo4j/import/

1)
LOAD CSV WITH HEADERS FROM 'file:///prof.csv' AS line
CREATE (:Prof { IDprof: toInt(line.id_prof),email: line.email, alias: line.alias, lastname: line.lastname, firstname:line.firstname, school:line.school,role:line.role,office:line.office,phone:line.phone})

2) 
LOAD CSV WITH HEADERS FROM 'file:///course.csv' AS line
CREATE (:Course { IDcourse: toInt(line.id_course),name: line.name})

3) 
USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///edge_course_prof.csv' AS kanteline
MATCH (p:Prof {IDprof: toInt(kanteline.id_prof)}), (c:Course { IDcourse: toInt(kanteline.id_course)})
CREATE (p)-[:teaches]->(c)

4)
CREATE INDEX ON :Prof(alias,lastname,firstname,school,role,office,phone,email,IDprof)

5)
CREATE INDEX ON :course(IDcourse,name)

-----
neue Indezierung einbinden
-----

6) Knoten "Topic" anlegen 
LOAD CSV WITH HEADERS FROM 'file:///knot_topic_topicID.csv' AS line
CREATE (:Topic {title: line.title, IDtopic: toInt(line.topicID)})

7) Kante "knows" anlegen
USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///edge_prof_topic.csv' AS kanteline
MATCH (p:Prof {IDprof:toInt(kanteline.profID)}), (t:Topic {IDtopic: toInt(kanteline.topicID)})
CREATE (p)-[:knows]->(t)
MATCH (a:Prof)-[r]-(b:Topic)
SET r.deleted = "false"

--------------------
Löschen von allen Topics und deren Verbindungen:
MATCH (n:Topics)
DETACH DELETE n
--------------------
